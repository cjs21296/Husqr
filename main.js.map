{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/services/friends-store.service.ts","./src/app/components/compose/compose.component.ts","./src/app/components/compose/compose.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/timeline/timeline.component.ts","./src/app/components/timeline/timeline.component.html","./src/app/components/cards/cards.component.ts","./src/app/components/cards/cards.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/helpers/date.ts","./src/app/components/friends/friends.component.ts","./src/app/components/friends/friends.component.html","./src/app/components/friend-card/friend-card.component.ts","./src/app/components/friend-card/friend-card.component.html","./src/app/services/user-info.service.ts","./src/app/services/timeline-store.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserInfoService } from 'src/app/services/user-info.service';\r\nimport { User } from 'src/app/types/user';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  user: User;\r\n\r\n  constructor(public userService:UserInfoService,public router:Router) {\r\n    this.userService.activeUser$.subscribe(user => {\r\n      this.user=user;\r\n      console.log(this.user);\r\n    });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.userService.hasActiveUser()) {\r\n      this.router.navigateByUrl(\"login\");\r\n    }\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark\">\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul ngbNav #nav=\"ngbNav\" class=\" navbar-nav nav-tabs mr-auto mt-2 mt-lg-0\">\r\n            <li ngbNavItem>\r\n                <a class=\"navbar-brand\" routerLink=\"/\">Husqr</a>\r\n            </li>\r\n\r\n            <li ngbNavItem>\r\n                <a class=\"nav-link\" routerLink=\"/compose\">Compose</a>\r\n            </li>\r\n            <li ngbNavItem>\r\n                <a class=\"nav-link\" routerLink=\"/friends\">Friends</a>\r\n            </li>\r\n            <li ngbNavItem>\r\n                <a class=\"nav-link\" *ngIf=\"user\" routerLink=\"/profile/{{user?.id}}\">Profile</a>\r\n            </li>\r\n        </ul>\r\n        <form class=\"form-inline my-2 my-lg-0  mr-3\">\r\n            <button class=\"btn\"><a class=\"nav-link login\" routerLink=\"/login\">Login</a></button>\r\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search husqs\" aria-label=\"Search\">\r\n            <button class=\"btn btn-outline-success my-2 my-sm-3\" type=\"submit\">Search Husqs</button>\r\n        </form>\r\n    </div>\r\n</nav>","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FriendsComponent } from '../components/friends/friends.component';\r\nimport { Friend } from '../types/friend';\r\nimport { User } from '../types/user';\r\nimport { UserInfoService } from './user-info.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FriendsStoreService {\r\n  private INITIAL_STATE: Friend[] = [{ id: 4, friendsID: [1, 2] },\r\n                                      {id: 5, friendsID:[]}];\r\n  private readonly friendsSubject = new BehaviorSubject<Friend[]>(this.INITIAL_STATE);\r\n  readonly friend$ = this.friendsSubject.asObservable();\r\n\r\n  get friends(): Friend[] {\r\n    return this.friendsSubject.getValue();\r\n  }\r\n\r\n  set friends(friends: Friend[]) {\r\n    this.friendsSubject.next(friends);\r\n    // console.log(friends);\r\n  }\r\n\r\n  constructor(public userService: UserInfoService) {\r\n    // console.log(\"initialization of friends\");\r\n    // console.log(this.friends);\r\n  }\r\n\r\n  addfriendService(ownerID: number, friendID: number): void {\r\n    this.friends = this.friends.map(friend => {\r\n      if (friend.id === ownerID) {\r\n        friend.friendsID.push(friendID);\r\n        return friend;\r\n      }\r\n      return friend;\r\n    })\r\n  }\r\n\r\n  removefriend(ownerID: number, friendID: number): void {\r\n    console.log(\"before: \",this.friends);\r\n    this.friends = this.friends.map(friend => {\r\n      if (friend.id === ownerID) {\r\n        friend.friendsID = friend.friendsID.filter(friend => friend !== friendID);\r\n        return friend;\r\n      }\r\n      return friend;\r\n    })\r\n    console.log(\"After: \",this.friends);\r\n  }\r\n\r\n  getFriendsByOwnerID(ownerID: number): Friend {\r\n    return this.friends.find(friend => friend.id === ownerID)\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TimelineStoreService } from 'src/app/services/timeline-store.service';\r\nimport { Husq } from 'src/app/types/husq';\r\nimport { formatDate } from '../helpers/date';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { UserInfoService } from 'src/app/services/user-info.service';\r\n\r\n@Component({\r\n  selector: 'app-compose',\r\n  templateUrl: './compose.component.html',\r\n  styleUrls: ['./compose.component.css']\r\n})\r\nexport class ComposeComponent implements OnInit {\r\n  form:FormGroup;\r\n\r\n  constructor(public timelineStore: TimelineStoreService, \r\n    public router:Router,\r\n    public userService:UserInfoService,\r\n    public fb:FormBuilder,\r\n    public modalService: NgbModal) {\r\n    this.form=this.fb.group({\r\n      message:['',[Validators.required,Validators.maxLength(255)]]\r\n    });\r\n   }\r\n\r\n  \r\n\r\n  public husqToAdd:Husq={\r\n      userID: 5,\r\n      date: formatDate(),\r\n      message: '',\r\n      id: 0,\r\n      comments:[]\r\n  }\r\n\r\n  public formSubmitted = false;\r\n\r\n\r\n  ngOnInit(): void {\r\n    if(!this.userService.hasActiveUser())\r\n    {\r\n      this.router.navigateByUrl(\"login\");\r\n    }\r\n  }\r\n\r\n  cancelHusq(content):void{    \r\n    this.modalService.open(content);\r\n    console.log(\"cencelHusq\");\r\n    console.log(this.modalService);\r\n  }\r\n\r\n  addHusq(): void {\r\n    this.formSubmitted=true;\r\n    if(this.form.valid){\r\n      this.formSubmitted=false;\r\n      console.log(\"Add Husq\");\r\n      this.husqToAdd.message=this.form.controls.message.value;\r\n      // console.log(\"Active User: \",this.userService.getActiveUser().id,\" \",this.userService.getActiveUser().name);\r\n      this.husqToAdd.userID = this.userService.getActiveUser().id;\r\n      this.timelineStore.addHusq(this.husqToAdd);\r\n      this.router.navigateByUrl(\"/\");\r\n    }    \r\n  }\r\n  continue():void{\r\n    this.modalService.dismissAll();\r\n    this.router.navigateByUrl(\"/\");\r\n  }\r\n\r\n \r\n\r\n}\r\n","<h2 class=\"text-center\">New Husq</h2>\r\n\r\n<div class=\"container mb-5\">\r\n    <div class=\"row no-gutters justify-content-center mx-auto\">\r\n        <div class=\"col-md-6 .offset-md-6\">\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"addHusq()\">\r\n                <div class=\"row justify-content-center\">\r\n                    <textarea placeholder=\"Type your new husq...\" formControlName=\"message\" rows=\"6\" cols=\"50\"\r\n                        maxlength=\"255\" resize=\"none\"></textarea>\r\n                    <div class=\"characters\">Characters: {{this.form.controls?.message.value.length}}/255</div>\r\n                </div>\r\n                <div class=\"bg-danger\"><span *ngIf=\"this.form.get('message').errors?.required && formSubmitted\">Text is\r\n                        Required</span></div>\r\n                <div class=\"row justify-content-center mx-3 my-3\">\r\n\r\n                    <ng-template #content let-c=\"close\" let-d=\"dismiss\">\r\n                        <div class=\"modal-header\">\r\n                            <h4 class=\"modal-title\" id=\"modal-basic-title\">Cancel?</h4>\r\n                            <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <p>Are you sure you want to cancel your Husq?</p>\r\n                        </div>\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"continue()\">Continue</button>\r\n                            <button type=\"button\" class=\"btn btn-outline-dark\"\r\n                                (click)=\"c('Cancel click')\">Cancel</button>\r\n                        </div>\r\n                    </ng-template>\r\n\r\n                    <button class=\"btn\" type=\"button\" (click)=\"cancelHusq(content)\">Cancel Husq</button>\r\n                    <button class=\"btn\" type=\"submit\">Submit Husq</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserInfoService } from 'src/app/services/user-info.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(public userService:UserInfoService, public router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.userService.hasActiveUser())\r\n    {\r\n      this.router.navigateByUrl(\"login\");\r\n    }\r\n  }\r\n\r\n}\r\n","<section class=\"container\">\r\n   <app-timeline></app-timeline>\r\n</section>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FriendsStoreService } from 'src/app/services/friends-store.service';\r\nimport { TimelineStoreService } from 'src/app/services/timeline-store.service';\r\nimport { UserInfoService } from 'src/app/services/user-info.service';\r\nimport { Husq } from 'src/app/types/husq';\r\nimport { User } from 'src/app/types/user';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  public friends: User[];\r\n  public loading: boolean = false;\r\n  @Input() husq: Husq;\r\n\r\n  myUser: User;\r\n  test:boolean=false;\r\n\r\n  constructor(public userService: UserInfoService,\r\n    public router: Router,\r\n    public route: ActivatedRoute,\r\n    public friendsstore: FriendsStoreService) {\r\n    this.getProfile();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.userService.hasActiveUser()) {\r\n      this.router.navigateByUrl(\"login\");\r\n    }\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile(): void {\r\n    this.route.paramMap.subscribe(param => {\r\n      this.myUser = this.userService.getUser(parseInt(param.get('id'), 10));\r\n    });\r\n\r\n    // const friendGroup = this.friendsstore.friends.find\r\n  }\r\n\r\n}\r\n","<div class=\"container-sm\">\r\n    <div class=\"card\">\r\n        <div class=\"row no-gutters\">\r\n            <div class=\"col-md-2  my-3 mx-3\">\r\n                <img src={{myUser.imgsrc}} class=\"card-img\" alt={{myUser.imgalt}}>\r\n                <h2 class=\"card-title\">{{myUser.name}}</h2>\r\n                    <div *ngIf=\"test; else elseBlock\">Content to render when condition is true.</div>\r\n                    <ng-template #elseBlock>Content to render when condition is false.</ng-template>\r\n            </div>\r\n            <div class=\"col-md-9 ml-1\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row\">\r\n\r\n                        <div class=\"profileInfo\">\r\n                            <h4>About Me:</h4>\r\n                            <p style=\"margin-left: 10px\">{{myUser.bio}}</p>\r\n                            <h5 *ngIf=\"myUser.workplace\">Workplace: {{myUser.workplace}}</h5>\r\n                            <h5 *ngIf=\"myUser.DOB\">Date of Birth: {{myUser.DOB}}</h5>\r\n                            <h5 *ngIf=\"myUser.favMovie\">Favorite Movie: {{myUser.favMovie}}</h5>\r\n                            <h5 *ngIf=\"myUser.favFoods\">Favorite Foods: </h5>\r\n                            <ul>\r\n                                <li *ngFor=\"let food of myUser.favFoods\">{{food}}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserInfoService } from 'src/app/services/user-info.service';\r\nimport { User } from 'src/app/types/user';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  user: User\r\n  constructor(public userService: UserInfoService, public router: Router) {\r\n    this.userService.activeUser$.subscribe(user => {\r\n      this.user = user;\r\n      console.log(this.user);\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.userService.hasActiveUser()) {\r\n      this.router.navigateByUrl(\"login\");\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"footer\">\r\n    <div class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <ul>\r\n                <li>\r\n                    <a class=\"nav-link\" routerLink=\"/\">Home</a>\r\n                </li>\r\n                <li>\r\n                    <a class=\"nav-link\" routerLink=\"/compose\">Compose</a>\r\n                </li>\r\n                <li>\r\n                    <a class=\"nav-link\" routerLink=\"/friends\">Friends</a>\r\n                </li>\r\n                <li>\r\n                    <a class=\"nav-link\" *ngIf=\"user\" routerLink=\"/profile/{{user?.id}}\">Profile</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <em>Copyright &copy; 2021</em>\r\n    <p><a href=\"mailto:pleasedont@address.com\">Contact us for Husqr support!</a></p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { TimelineStoreService } from 'src/app/services/timeline-store.service';\r\nimport { Husq } from 'src/app/types/husq';\r\n\r\n\r\n@Component({\r\n  selector: 'app-timeline',\r\n  templateUrl: './timeline.component.html',\r\n  styleUrls: ['./timeline.component.css']\r\n})\r\nexport class TimelineComponent implements OnInit {\r\n  \r\n  constructor(public timelineStore: TimelineStoreService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}","<div class=\"page-wrap timeline\">\r\n    <div class=\"row\">\r\n    <!-- <div class=\"col-sm col-lg-6 offset-lg-3 \"> -->\r\n    <div class=\"col-md justify-content-center\">\r\n        <h1 class=\"text-center\">Recent Husqs</h1>\r\n        <ng-container *ngFor=\"let husq of timelineStore.husq$ | async\">\r\n            <app-cards [husq]=\"husq\"></app-cards>\r\n                    </ng-container>\r\n    </div>\r\n</div>\r\n</div>","\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TimelineStoreService } from 'src/app/services/timeline-store.service';\r\nimport { UserInfoService } from 'src/app/services/user-info.service';\r\nimport { Husq } from 'src/app/types/husq';\r\nimport { User } from 'src/app/types/user';\r\nimport { formatDate } from '../helpers/date';\r\n\r\n@Component({\r\n  selector: 'app-cards',\r\n  templateUrl: './cards.component.html',\r\n  styleUrls: ['./cards.component.css']\r\n})\r\nexport class CardsComponent implements OnInit {\r\n\r\n  @Input() husq:Husq;\r\n  @Input() user:User;\r\n  form:FormGroup;\r\n\r\n  constructor(public timelineStore: TimelineStoreService,\r\n    public fb:FormBuilder,\r\n    public userService:UserInfoService) {\r\n      this.form=this.fb.group({\r\n        comment:['',[Validators.required,Validators.maxLength(255)]]\r\n      });\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.userService.getUser(this.husq.userID);\r\n  }\r\n\r\n  removeHusq(id): void {\r\n    this.timelineStore.removeHusq(id);\r\n  }\r\n\r\n  addComment(husq:Husq):void{\r\n    // console.log(\"Adding Comment\");\r\n    // console.log(comment);\r\n    // console.log(this.form.controls.comment.value)\r\n    let newComment:Husq = {\r\n      id: 0,\r\n      userID: this.userService.getActiveUser().id,\r\n      date: formatDate(),\r\n      message: this.form.controls.comment.value,\r\n      parentHusq: husq,\r\n      comments:[]\r\n    };\r\n    // console.log(husq.id,newComment);\r\n    this.timelineStore.addComment(newComment);\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-3\">\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col-md-3\">\r\n            <img src={{user.imgsrc}} class=\"card-img\" alt={{user.imgalt}}>\r\n        </div>\r\n        <div class=\"col-md-8\">\r\n            <div class=\"card-body\">\r\n                <a class=\"card-title\" routerLink=\"/profile/{{user.id}}\"><h5>{{user.name}}</h5></a>\r\n                <h6 class=\"card-subtitle mb-2 text-muted\">{{husq.date}}</h6>\r\n                <p class=\"card-text\">{{husq.message}}</p>\r\n                <div class=\"input-group mb-3\">\r\n                    <form [formGroup]=\"form\" (ngSubmit)=\"addComment(husq)\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Husq your reply\"\r\n                            aria-label=\"Reply to Rex Burkhead\" formControlName=\"comment\" aria-describedby=\"reply-1\" maxlength=\"255\">\r\n                        <div class=\"input-group-append\">\r\n                            <button mat-raised-button type=\"submit\" id=\"reply-1\" color=\"primary\">Reply</button>\r\n                            <button mat-raised-button (click)=\"removeHusq(husq.id)\" color=\"primary\">Delete</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"comments\" *ngFor=\"let husq of husq.comments\">\r\n            <app-cards [husq]=\"husq\"></app-cards>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'my-app';\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n<!-- Finalized Week 2 Deployment -->","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/types/user';\r\nimport { UserInfoService } from '../../services/user-info.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form:FormGroup;\r\n  hide = true\r\n\r\n  constructor(public userService: UserInfoService,\r\n    public router: Router,\r\n    public fb:FormBuilder,) {\r\n      this.form=this.fb.group({\r\n        username:['',[Validators.required,Validators.maxLength(15)]],\r\n        password:['',[Validators.required,Validators.maxLength(30)]]\r\n      });\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.userService.hasActiveUser) {\r\n    //   this.router.navigateByUrl(\"home\");\r\n    // }\r\n  }\r\n\r\n  login(): void {\r\n    let test: string = \"Calvin\";\r\n    this.userService.userLogin(this.form.controls.username.value, this.form.controls.password.value);\r\n  }\r\n\r\n  register():void {\r\n     this.userService.registerUser(this.form.controls.username.value, this.form.controls.password.value);\r\n    this.router.navigateByUrl(\"home\");\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"container-fluid landing-container\">\r\n    <div class=\"row h-100 align-items-center\">\r\n        <div class=\"col-xl-4 col-lg-5 col-md-8 col-sm-10 col-xs-11 landing-ui mx-auto\">\r\n            <form [formGroup]=\"form\">\r\n                <mat-tab-group mat-align-tabs=\"start\" mat-stretch-tabs>\r\n                    <mat-tab label=\"SIGN IN\">\r\n                        <!-- <div *ngIf=\"actionTab === 'login'\" id=\"login-ui\" class=\"container-fluid my-3 mx-auto\"> -->\r\n                        <div id=\"login-ui\" class=\"container-fluid my-3 mx-auto\">\r\n                            <h1 class=\"text-center my-2\">Sign In</h1>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\">\r\n                                    <mat-form-field appearance=\"fill\">\r\n                                        <input matInput class=\"login-input\" type=\"username\" placeholder=\"Username\"\r\n                                            formControlName=\"username\" required>\r\n                                        <div class=\"mat-error\"\r\n                                            *ngIf=\"form.get('username').invalid && form.get('username').touched\">\r\n                                            Username is required.</div>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\">\r\n                                    <mat-form-field appearance=\"fill\">\r\n                                        <input matInput class=\"w-75 mx-auto\" type=\"password\" formControlName=\"password\"\r\n                                            placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\">\r\n                                        <div class=\"mat-error\"\r\n                                            *ngIf=\"form.get('password').invalid && form.get('password').touched\">\r\n                                            Password is required.</div>\r\n                                        <button mat-icon-button matSuffix (click)=\"hide = !hide\"\r\n                                            [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                                            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                                        </button>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <button mat-raised-button (click)=\"login()\" color=\"primary\">LOGIN</button>\r\n                        </div>\r\n                    </mat-tab>\r\n                    <mat-tab label=\"REGISTER\">\r\n                        <div id=\"register-ui\" class=\"container-fluid my-3 mx-auto\">\r\n                            <h1 class=\"text-center my-2\">Register</h1>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\">\r\n                                    <mat-form-field appearance=\"fill\">\r\n                                        <input matInput class=\"login-input\" type=\"username\" placeholder=\"Username\"\r\n                                            formControlName=\"username\" required>\r\n                                        <div class=\"mat-error\"\r\n                                            *ngIf=\"form.get('username').invalid && form.get('username').touched\">\r\n                                            Username is required.</div>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-lg-12\">\r\n                                    <mat-form-field appearance=\"fill\">\r\n                                        <input matInput class=\"w-75 mx-auto\" type=\"password\" formControlName=\"password\"\r\n                                            placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\">\r\n                                        <div class=\"mat-error\"\r\n                                            *ngIf=\"form.get('password').invalid && form.get('password').touched\">\r\n                                            Password is required.</div>\r\n                                        <button mat-icon-button matSuffix (click)=\"hide = !hide\"\r\n                                            [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                                            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                                        </button>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                            </div>\r\n                            <button mat-raised-button (click)=\"register()\" color=\"primary\">CREATE ACCOUNT</button>\r\n                        </div>\r\n                    </mat-tab>\r\n                </mat-tab-group>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>register works!</p>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { TimelineComponent } from './components/timeline/timeline.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { NgbModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ComposeComponent } from './components/compose/compose.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { FriendsComponent } from './components/friends/friends.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { CardsComponent } from './components/cards/cards.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FriendCardComponent } from './components/friend-card/friend-card.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TimelineComponent,\r\n    HeaderComponent,\r\n    ComposeComponent,\r\n    ProfileComponent,\r\n    FriendsComponent,\r\n    HomeComponent,\r\n    CardsComponent,\r\n    FooterComponent,\r\n    FriendCardComponent,\r\n    LoginComponent,\r\n    RegisterComponent    \r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    BrowserAnimationsModule,\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent },\r\n      { path: 'login', component: LoginComponent },\r\n      { path: 'home', component: HomeComponent },\r\n      { path: 'compose', component: ComposeComponent },\r\n      { path: 'friends', component: FriendsComponent },\r\n      { path: 'profile/:id', component: ProfileComponent },\r\n    ])],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { format, compareAsc } from 'date-fns'\r\n\r\nexport const formatDate = (date?: Date): string => {\r\n    const target = date || new Date();\r\n    return format(target, 'MM/dd/yyyy @ h:mma');\r\n};\r\n\r\nexport const formatDateNoTime = (date?:Date):string => {\r\n    const target = date || new Date();\r\n    return format(target, 'MM/dd/yyyy');\r\n}","import { Route } from '@angular/compiler/src/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FriendsStoreService } from 'src/app/services/friends-store.service';\r\nimport { UserInfoService } from 'src/app/services/user-info.service';\r\nimport { Friend } from 'src/app/types/friend';\r\nimport { User } from 'src/app/types/user';\r\n\r\n@Component({\r\n  selector: 'app-friends',\r\n  templateUrl: './friends.component.html',\r\n  styleUrls: ['./friends.component.css']\r\n})\r\nexport class FriendsComponent implements OnInit {\r\n  myFriends:User[]=[];\r\n  notFriends:User[]=[];\r\n\r\n  constructor(public friendsService: FriendsStoreService, public userService: UserInfoService, public router:Router) {\r\n        this.friendsService.friend$.subscribe(friends=>{\r\n          const friendObj = this.friendsService.getFriendsByOwnerID(this.userService.getActiveUser().id);\r\n          this.myFriends = friendObj.friendsID.map(id=>this.userService.getUser(id));\r\n\r\n          this.notFriends = this.userService.users.filter(user=>!friendObj.friendsID.includes(user.id));\r\n          });        \r\n  }\r\n  ngOnInit(): void {\r\n    if(!this.userService.hasActiveUser())\r\n    {\r\n      this.router.navigateByUrl(\"login\");\r\n    }\r\n  }\r\n}\r\n","\r\n    <h2 class=\"text-center\">Husqrs</h2>\r\n    <div class=\"container\">\r\n        <div class=\"row no-gutters justify-content-center mx-auto friends\">\r\n            <div class=\"col-md-6 .offset-md-6 col-lg-8 .offset-lg-4\">\r\n                <div class=\"row justify-content-center\">\r\n                    <h1 class=\"text-center\">People You May Know</h1>\r\n                    <ng-container *ngFor=\"let friend of notFriends\">\r\n                        \r\n                            <app-friend-card [friend]=\"friend\"></app-friend-card>\r\n                        \r\n                    </ng-container>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                    <h1 class=\"text-center\">Your Friends</h1>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                    <ng-container *ngFor=\"let friend of myFriends\">\r\n                        \r\n                            <app-friend-card [friend]=\"friend\"></app-friend-card>\r\n                        \r\n                    </ng-container>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FriendsStoreService } from 'src/app/services/friends-store.service';\r\nimport { UserInfoService } from 'src/app/services/user-info.service';\r\nimport { Friend } from 'src/app/types/friend';\r\nimport { User } from 'src/app/types/user';\r\n\r\n@Component({\r\n  selector: 'app-friend-card',\r\n  templateUrl: './friend-card.component.html',\r\n  styleUrls: ['./friend-card.component.css']\r\n})\r\nexport class FriendCardComponent implements OnInit {\r\n  @Input() friend: User;\r\n  constructor(public friendStore: FriendsStoreService, public userService:UserInfoService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  addFriendComponent(id : number): void {\r\n    console.log(\"friends on button press\")\r\n    console.log(this.friendStore.friends);\r\n    this.friendStore.addfriendService(this.userService.getActiveUser().id,id);\r\n  }\r\n  removeFriend(id: number): void {\r\n    console.log(\"remove: \")\r\n    this.friendStore.removefriend(this.userService.getActiveUser().id,id);\r\n  }\r\n\r\n  checkMe(id:number):boolean{\r\n    const user = this.friendStore.getFriendsByOwnerID(this.userService.getActiveUser().id);\r\n    return user.friendsID.includes(id);\r\n  }\r\n}\r\n","<div class=\"card mx-3 my-3\">\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col-md-6\">\r\n                <img src={{friend.imgsrc}} class=\"card-img\" alt={{friend.imgalt}}>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{{friend.name}}</h5>\r\n                <div class=\"input-group mb-3\">\r\n                    <button class=\"btn btn-outline-success\" mat-button *ngIf=\"!checkMe(friend.id)\"\r\n                        (click)=\"addFriendComponent(friend.id)\">Add Friend</button>\r\n                    <button  class=\"btn btn-outline-success\" *ngIf=\"checkMe(friend.id)\"\r\n                        (click)=\"removeFriend(friend.id)\">Remove Friend</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { stringify } from '@angular/compiler/src/util';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, bindCallback } from 'rxjs';\r\nimport { formatDate, formatDateNoTime } from '../components/helpers/date';\r\nimport { User } from '../types/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserInfoService {\r\n\r\n  private INITIAL_STATE: User[] = [\r\n    {\r\n      id: 1,\r\n      name: 'Rex Burkhead',\r\n      imgsrc: './assets/imgs/rex.jfif',\r\n      imgalt: 'rex image',\r\n      friends:[],\r\n      bio: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n      favMovie: 'Sweet Magnolias',\r\n      favFoods: ['Pineapple Pizza', 'Pretzels'],\r\n      DOB: formatDateNoTime(new Date(1990, 7, 2)),\r\n      workplace: 'Huskers'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Russ Beye',\r\n      imgsrc: './assets/imgs/russ.png',\r\n      imgalt: 'rus image',\r\n      friends:[],\r\n      bio: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n      favMovie: 'Fight Club',\r\n      favFoods: ['Pineapple Pizza', 'Margaritas'],\r\n      DOB: formatDateNoTime(new Date(1970, 7, 2)),\r\n      workplace: 'Self-Employed'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Candice',\r\n      imgsrc: './assets/imgs/candice.png',\r\n      imgalt: 'candice image',\r\n      friends:[],\r\n      bio: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n      favMovie: 'Marley and Me',\r\n      favFoods: ['Queso', 'BEER'],\r\n      DOB: formatDateNoTime(new Date(1990, 7, 2)),\r\n      workplace: 'Home'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Calvin',\r\n      password: 'test',\r\n      imgsrc: './assets/imgs/calvin.png',\r\n      imgalt: 'calvin image',\r\n      friends:[1,2],\r\n      bio: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n      favMovie: 'Outlander',\r\n      favFoods: ['Meat Lovers Pizza', 'Pastel'],\r\n      DOB: formatDateNoTime(new Date(1996, 1, 12)),\r\n      workplace: 'Home'\r\n    },\r\n\r\n    {\r\n      id: 5,\r\n      name: 'Jordan',\r\n      password: \"lizlemon\",\r\n      imgsrc: './assets/imgs/jordan.jpg',\r\n      imgalt: 'jordan image',\r\n      friends:[],\r\n      bio: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n      favMovie: 'Tommy Boy',\r\n      favFoods: ['Tofu'],\r\n    }\r\n\r\n  ];\r\n\r\n  public ActiveUser: User = null;\r\n\r\n\r\n  private readonly activeSubject = new BehaviorSubject<User>(this.ActiveUser);\r\n  readonly activeUser$ = this.activeSubject.asObservable();\r\n\r\n\r\n  private readonly userSubject = new BehaviorSubject<User[]>(this.INITIAL_STATE);\r\n  readonly user$ = this.userSubject.asObservable();\r\n\r\n  get users(): User[] {\r\n    return this.userSubject.getValue();\r\n  }\r\n\r\n  set users(users: User[]) {\r\n    this.userSubject.next(users);\r\n  }\r\n  constructor(public router: Router) {\r\n    // console.log(\"here is initialization of users\")\r\n    // console.log(this.users);\r\n  }\r\n\r\n  getAllUsers(): User[] {\r\n    return this.users;\r\n  }\r\n\r\n  getUser(id: number): User {\r\n    return this.users.filter(user => user.id == id)[0];\r\n  }\r\n\r\n  userLogin(username: string, password: string): void {\r\n    if (this.verifyUserExists(username) && this.verifyPassword(password)) {\r\n      this.setActiveUser(username);\r\n      this.router.navigateByUrl(\"home\");\r\n    }\r\n    else {\r\n      //todo: come back and add to register\r\n      //router link to register\r\n      console.log(\"GTFO\");\r\n    }\r\n  }\r\n\r\n  getActiveUser(): User {\r\n    return this.activeSubject.getValue();\r\n  }\r\n\r\n  registerUser(username: string, password: string): void {\r\n    let newUser: User = {\r\n      id: 20,\r\n      name: username,\r\n      password: password,\r\n      friends: [],\r\n    }\r\n    if (!this.verifyUserExists(username)) {\r\n      this.userSubject.next(this.userSubject.getValue().concat([newUser]));\r\n    }\r\n    this.setActiveUser(username);\r\n  }\r\n\r\n  hasActiveUser(): boolean {\r\n    if (this.activeSubject.getValue() == null) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  verifyUserExists(username: string): boolean {\r\n    let testUser: User = this.users.find(user => user.name === username);\r\n    return !!testUser; //Nifty test case of simple true/false if object exists  \"double negation\"\r\n  }\r\n\r\n  \r\n  verifyPassword(password: string): boolean {\r\n    let testUser: User = this.users.find(user => user.password === password);\r\n    return !!testUser;\r\n  }\r\n\r\n  setActiveUser(username: string): void {\r\n    const user = this.users.find(user => user.name === username);\r\n    this.activeSubject.next(user);\r\n  }\r\n}\r\n","import { identifierModuleUrl } from '@angular/compiler';\r\nimport { Injectable } from '@angular/core';\r\nimport { regExpEscape } from '@ng-bootstrap/ng-bootstrap/util/util';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Husq } from '../types/husq';\r\nimport { formatDate } from '../components/helpers/date'\r\nimport { hu } from 'date-fns/locale';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TimelineStoreService {\r\n  maxID:number=10;\r\n  private INITIAL_STATE: Husq[] = [\r\n    {\r\n      id: 1,\r\n      userID: 1,\r\n      date: formatDate(),\r\n      message: 'doin football stuffs',\r\n      comments:[]\r\n    },\r\n    {\r\n      id: 4,\r\n      userID: 2,\r\n      date: formatDate(),\r\n      message: 'Jordan is so smart and has a great computer!  Wow!',\r\n      comments:[]\r\n    },\r\n    {\r\n      id: 2,\r\n      userID: 3,\r\n      date: formatDate(),\r\n      message: 'This is not where I parked my car',\r\n      comments:[]\r\n    },\r\n    {\r\n      id: 5,\r\n      userID: 4,\r\n      date: formatDate(),\r\n      message: 'My back sure hurts...',\r\n      comments:[]\r\n    },\r\n\r\n    {\r\n      id: 3,\r\n      userID: 5,\r\n      date: formatDate(),\r\n      message: 'hey, my app finally ran!',\r\n      comments:[]\r\n    }\r\n\r\n  ];\r\n\r\n  private readonly husqsSubject = new BehaviorSubject<Husq[]>(this.INITIAL_STATE);\r\n  readonly husq$ = this.husqsSubject.asObservable();\r\n\r\n  get husqs(): Husq[] {\r\n    return this.husqsSubject.getValue();\r\n  }\r\n\r\n  set husqs(husqs: Husq[]) {\r\n    this.husqsSubject.next(husqs);\r\n  }\r\n\r\n\r\n  constructor() { }\r\n\r\n\r\n  addHusq(husq: Husq): void {\r\n    let max = this.husqs.reduce(function(prev, current) {\r\n      return (prev.id > current.id) ? prev : current\r\n  })\r\n  \r\n  husq.id=max.id+1;\r\n\r\n    this.husqs = [\r\n      ... this.husqs,\r\n      husq\r\n    ];\r\n  }\r\n\r\n  removeHusq(id: number): void {\r\n    this.husqs = this.husqs.filter(husq => husq.id !== id);\r\n  }\r\n\r\n  addComment(comment:Husq):void{\r\n    let max = this.husqs.reduce(function(prev, current) {\r\n      return (prev.id > current.id) ? prev : current\r\n    })\r\n    this.assignID(comment);\r\n    \r\n    // comment.id=max.id+1;\r\n    comment.parentHusq.comments.push(comment);    \r\n  }\r\n\r\n  assignID(husq:Husq):void{\r\n    husq.id=this.maxID+1;\r\n    this.maxID++;\r\n  }\r\n\r\n\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}